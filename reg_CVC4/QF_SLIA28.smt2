(set-logic QF_SLIA)
(declare-fun var0 () String)
(declare-fun var1 () String)
(declare-fun var2 () String)
(declare-fun var3 () String)
(declare-fun var4 () String)
(declare-fun var5 () String)
(declare-fun var6 () String)
(declare-fun var7 () String)
(declare-fun var8 () String)
(declare-fun var9 () String)
(declare-fun var10 () String)
(declare-fun var11 () String)
(declare-fun var12 () String)
(declare-fun var13 () String)
(declare-fun var14 () String)
(declare-fun var15 () String)
(declare-fun var16 () String)
(declare-fun var17 () String)
(declare-fun var18 () String)
(declare-fun var19 () String)
(declare-fun var20 () Int)
(declare-fun var21 () Int)
(declare-fun var22 () Int)
(declare-fun var23 () Int)
(declare-fun var24 () Bool)
(declare-fun var25 () Bool)
(assert (<= var20 var22))
(assert (> (str.indexof (str.substr var2 var21 var21) (str.substr var19 (str.indexof var17 var11 var20) (str.indexof (str.replace var18 var7 var19) (str.at var5 2) (str.len var7))) (str.indexof var4 var1 7)) (str.len "NlHf<)y\\\\\\\\\\\\\\\\7n")))
(assert (str.prefixof var17 "kKI\\\\\\\\\\\\\\\\gGjE;*"))
(assert (< (str.len var10) (str.len var6)))
(assert (str.suffixof (str.substr var14 var22 var21) (str.substr var18 var20 var22)))
(assert (>= 8 var22))
(assert (< var22 var21))
(assert (>= (str.indexof var0 "S2J.?m$soF" var20) (str.len "d;<fKstGmy")))
(assert (not (< var20 var22)))
(assert (str.prefixof (str.at var5 var21) (str.at var4 var22)))
(check-sat)