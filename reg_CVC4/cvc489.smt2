(set-logic QF_SLIA)
(declare-fun var0 () Bool)
(declare-fun var1 () Bool)
(declare-fun var2 () String)
(declare-fun var3 () Int)
(declare-fun var4 () Int)
(declare-fun var5 () Bool)
(declare-fun var6 () Bool)
(declare-fun var7 () String)
(declare-fun var8 () String)
(declare-fun var9 () Int)
(declare-fun var10 () Int)
(declare-fun var11 () Bool)
(declare-fun var12 () String)
(declare-fun var13 () String)
(declare-fun var14 () Int)
(declare-fun var15 () String)
(declare-fun var16 () String)
(declare-fun var17 () Int)
(declare-fun var18 () Bool)
(declare-fun var19 () String)
(declare-fun var20 () String)
(assert (not var0))
(assert (not var1))
(assert (or (str.in.re var2 re.allchar) (not true)))
(assert (and (<= var3 var4) (or var5 var6)))
(assert (>= (str.to.int var7) (str.len var8)))
(assert (and (>= var9 var10) (not var5)))
(assert (and (and var11 var6) (= (str.replace (str.++ "+#PM^t%!Q'vZz^!h3X80W5FT[CM!%+F5sJ-m#i<;5${>fV[\\~MtMCOsAPFO{_$;36H.bWvvFb~0=mP|Nfr/^on8(Y+1^{(H]<4]UZqC:kT'D=N@}!'1AAo[A+s=\\gp0^xzk:6n&5~I_kk(.L#hF+EK$ocST/dRL^YH{h" var12) (str.at var8 var3) (str.++ var2 var12)) (str.replace (str.substr var13 51 var14) (str.substr var15 var3 var10) (str.substr var16 78 var17)))))
(assert (or (not var18) (str.suffixof var12 var19)))
(assert (= (str.suffixof (str.substr var13 26 var14) (str.substr (str.at var20 var17) (str.to.int var12) (str.to.int var7))) (str.contains (str.at var8 var10) (str.substr var20 var10 var14))))
(assert (and (or (not (or var0 var1)) (= (str.len var7) (str.indexof var7 var15 var3))) (>= (str.len var15) (str.to.int var8))))
(assert (< (str.len (str.replace var16 var8 var19)) (str.len (str.replace var7 var12 var16))))
(assert (str.in.re (str.++ (str.substr var16 83 var4) (str.substr var20 var9 var3)) (re.* re.allchar)))
(assert (and var18 var11))
(check-sat)